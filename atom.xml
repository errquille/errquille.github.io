<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Studentský blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://errquille.github.io/"/>
  <updated>2017-03-11T23:25:21.480Z</updated>
  <id>http://errquille.github.io/</id>
  
  <author>
    <name>Šimon Wernisch</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Čas a Raspberry Pi</title>
    <link href="http://errquille.github.io/2017/03/11/Cas-a-Raspberry-Pi/"/>
    <id>http://errquille.github.io/2017/03/11/Cas-a-Raspberry-Pi/</id>
    <published>2017-03-11T18:25:35.000Z</published>
    <updated>2017-03-11T23:25:21.480Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Terminologie"><a href="#Terminologie" class="headerlink" title="Terminologie"></a>Terminologie</h2><p>V anglických textech se při popisu počítačových hodin objevují slova accuracy a resolution. Resolution, česky rozlišení, udává nejmenší díl, jehož změnu jsme schopni rozlišit. Accuracy, česky přesnost, je rozdíl změřeného času oproti skutečnému času, tedy míra chyby. Skutečný čas je ale záležitost, kterou nikdy neměříme naprosto přesně, a tak nám k určení přesnosti stačí porovnání s hodinami, které jsou prokázány jako dostatečně dobré. Od přesnosti se také rozlišuje preciznost (precision). <img src="http://media.fluke.com/images/600532-dmm-accuracy_715x360-01.jpg"> Rozdíl mezi nimi je, že preciznost udává míru statistické chyby, přesnost udává systematickou chybu.</p>
<h2 id="STC"><a href="#STC" class="headerlink" title="STC"></a>STC</h2><p>Raspberry Pi nemá RTC obvod, TSC ani HPET. Jako zdroj hodin používá vlastní softwareový čítač STC.<br><figure class="highlight c"><figcaption><span>STC v kernelu Raspberry Pi</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* The STC is a free running counter that increments at the rate of 1MHz */</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> STC_FREQ_HZ 1000000</span></div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line"> * Constants generated by clocks_calc_mult_shift(m, s, 1MHz, NSEC_PER_SEC, 60).</div><div class="line"> * This gives a resolution of about 1us and a wrap period of about 1h11min.</div><div class="line"> */</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> SC_MULT		4194304000u</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> SC_SHIFT	22</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> cycle_t <span class="title">stc_read_cycles</span><span class="params">(<span class="keyword">struct</span> clocksource *cs)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="comment">/* STC: a free running counter that increments at the rate of 1MHz */</span></div><div class="line">	<span class="keyword">return</span> (<span class="keyword">cycle_t</span>) readl(__io_address(ST_BASE + <span class="number">0x04</span>));</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> clocksource clocksource_stc = &#123;</div><div class="line">	.name = <span class="string">"stc"</span>,</div><div class="line">	.rating = <span class="number">300</span>,</div><div class="line">	.read = stc_read_cycles,</div><div class="line">	.mask = CLOCKSOURCE_MASK(<span class="number">32</span>),</div><div class="line">	.flags = CLOCK_SOURCE_IS_CONTINUOUS,</div><div class="line">&#125;;</div></pre></td></tr></table></figure><br>Tento čítač inkrementuje s frekvencí 1 MHz a má tedy rozlišení jedné mikrosekundy. Bez hardwareových hodin nemá z čeho být inicializován, a záleží tedy na synchronizaci k nastavení správného času a udržení vysoké přesnosti.</p>
<h2 id="PTP"><a href="#PTP" class="headerlink" title="PTP"></a>PTP</h2><p>PTP, precision time protocol, také známý jako IEEE 1588, je protokol k synchronizaci času mezi master zařízením a slave zařízením, podobně jako NTP. NTP je určeno k synchronizaci po internetu, a v lokální síti nedosahuje té nejvyšší přesnosti. To dalo prostor vzniku PTP, které si bere za cíl dosahovat vyšší přesnosti v lokálních sítích, potřebné pro řídící systémy, měřící systémy a systémy distribuce energie. Často bývá uváděná přesnost po synchronizaci pod jednu mikrosekundu. Pro systém Linux použijeme implementaci PTP protokolu <a href="http://linuxptp.sourceforge.net/" target="_blank" rel="external">linuxptp</a>.</p>
<h2 id="PPS"><a href="#PPS" class="headerlink" title="PPS"></a>PPS</h2><p>K porovnání a ověření, jaké přesnosti dosáhne synchronizace pomocí PTP, vyvedeme na jeden z výstupních pinů GPIO PPS signál. Poté na oscilátoru zjistíme, jaký posun mají mezi sebou hrany master a slave zařízení.</p>
<h2 id="Modifikace-kernelu"><a href="#Modifikace-kernelu" class="headerlink" title="Modifikace kernelu"></a>Modifikace kernelu</h2><h3 id="PPS-1"><a href="#PPS-1" class="headerlink" title="PPS"></a>PPS</h3><h3 id="linuxptp"><a href="#linuxptp" class="headerlink" title="linuxptp"></a>linuxptp</h3>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Terminologie&quot;&gt;&lt;a href=&quot;#Terminologie&quot; class=&quot;headerlink&quot; title=&quot;Terminologie&quot;&gt;&lt;/a&gt;Terminologie&lt;/h2&gt;&lt;p&gt;V anglických textech se při po
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Měření dopravního zpoždění</title>
    <link href="http://errquille.github.io/2017/03/01/Mereni-dopravniho-zpozdeni/"/>
    <id>http://errquille.github.io/2017/03/01/Mereni-dopravniho-zpozdeni/</id>
    <published>2017-03-01T13:09:49.000Z</published>
    <updated>2017-03-06T17:29:09.146Z</updated>
    
    <content type="html"><![CDATA[<p>V minulém semestru jsem se zabýval synchronizací času a měřením dopravního zpoždění. Napsal jsem k tomu <a href="/pdf/indprojekt-wernisch.pdf">zprávu</a>. Na programu aut se však pár věcí změnilo, a tak zpoždění budu měřit znova, jestli nebudou jiná.</p>
<h2 id="Projekt-Slotcar-platooning"><a href="#Projekt-Slotcar-platooning" class="headerlink" title="Projekt Slotcar platooning"></a>Projekt Slotcar platooning</h2><p>Abych ale také představil, s čím pracuji. <div class="video-container"><iframe src="//www.youtube.com/embed/FD_QqYuvv_g" frameborder="0" allowfullscreen></iframe></div>  Tým na Katedře řídící techniky vedený panem Ing. Zdeňkem Hurákem vytvořil model autodráhy a autíček. Jde o modifikovaná dráhová autíčka Carrera, do kterých se vměstnal modul Raspberry Pi, STM32 procesor, dálkové senzory a WiFi přijímač. Na Raspberry běží program, který řídí chod aut a zajišťuje i síťovou komunikaci mezi autíčky a PC s grafickým rozhraním.<br><img src="https://cyber.felk.cvut.cz/theses/pictures/487.jpg"></p>
<h2 id="Mereni-dopravniho-zpozdeni"><a href="#Mereni-dopravniho-zpozdeni" class="headerlink" title="Měření dopravního zpoždění"></a>Měření dopravního zpoždění</h2><p>V programu jsou do paketů implementovány časové značky. Porovnáním s časem při zpracovávání měříme dopravní zpoždění. Ta si pak ukládám do souboru a vlastní funkcí MATLABu převádím na histogramy.<br><figure class="highlight matlab"><figcaption><span>createfigure.m</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">createfigure</span> <span class="params">(data1)</span></span></div><div class="line"><span class="comment">%  DATA1:  histogram data</span></div><div class="line">figure1 = figure;</div><div class="line"><span class="comment">% Create axes</span></div><div class="line">axes1 = axes(<span class="string">'Parent'</span>,figure1);</div><div class="line"><span class="comment">% Create histogram</span></div><div class="line">histogram(data1,<span class="string">'Parent'</span>,axes1,...</div><div class="line">    <span class="string">'BinMethod'</span>,<span class="string">'auto'</span>, <span class="string">'BinWidth'</span>,<span class="number">5</span>);</div><div class="line"><span class="comment">% Create xlabel</span></div><div class="line">xlabel(<span class="string">'ms'</span>);</div><div class="line"><span class="comment">% Create ylabel</span></div><div class="line">ylabel(<span class="string">'četnost'</span>);</div><div class="line"><span class="comment">% Create title</span></div><div class="line">title(&#123;<span class="string">'Dopravní zpoždění dvou aut'</span>&#125;,<span class="string">'FontSize'</span>,...</div><div class="line">      <span class="number">10</span>, <span class="string">'FontWeight'</span>, <span class="string">'normal'</span>);</div><div class="line">box(axes1,<span class="string">'on'</span>);</div><div class="line">grid(axes1,<span class="string">'on'</span>);</div><div class="line"><span class="comment">% Set the remaining axes properties</span></div><div class="line">set(axes1,<span class="string">'GridAlpha'</span>,<span class="number">1</span>,<span class="string">'MinorGridAlpha'</span>,<span class="number">1</span>,...</div><div class="line">    <span class="string">'XMinorTick'</span>,<span class="string">'on'</span>,...</div><div class="line">    <span class="string">'YMinorTick'</span>, <span class="string">'on'</span>,<span class="string">'YScale'</span>,<span class="string">'log'</span>);</div></pre></td></tr></table></figure></p>
<p>Takto jsem si kdysi změřil následující zpoždění. <img src="/img/dopravni-zpozdeni-1.png" title="Histogram dopravního zpoždění"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;V minulém semestru jsem se zabýval synchronizací času a měřením dopravního zpoždění. Napsal jsem k tomu &lt;a href=&quot;/pdf/indprojekt-wernisch
    
    </summary>
    
      <category term="Dopravní zpoždění" scheme="http://errquille.github.io/categories/Dopravni-zpozdeni/"/>
    
    
  </entry>
  
</feed>
